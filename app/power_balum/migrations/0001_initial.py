# Generated by Django 4.2.2 on 2023-06-22 19:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Eletrica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alimentacao', models.CharField(max_length=100, verbose_name='Alimentação')),
                ('consumo', models.CharField(max_length=100, verbose_name='Consumo')),
                ('corrente_max', models.CharField(max_length=100, verbose_name='Corrente Máxima')),
            ],
        ),
        migrations.CreateModel(
            name='GeralPowerBalum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_in', models.CharField(max_length=100, verbose_name='Entrada de sinal de vídeo')),
                ('video_out', models.CharField(max_length=100, verbose_name='Saída de sinal de vídeo')),
                ('alimentacao_camera', models.CharField(max_length=100, verbose_name='Alimentação da câmera')),
                ('compatibilidade_dados', models.CharField(max_length=100, verbose_name='Compatibilidade de dados')),
                ('compatibilidade_audio', models.CharField(max_length=100, verbose_name='Compatibilidade de áudio')),
                ('fun4p1', models.CharField(max_length=100, verbose_name='Função 4 em 1')),
            ],
        ),
        migrations.CreateModel(
            name='ImgPowerBalum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocolos_de_video', models.CharField(max_length=100, verbose_name='Protocolos de Vídeo')),
                ('alcance_analógica', models.CharField(max_length=100, verbose_name='Alcance Analógica')),
                ('alcance_hdcvi', models.CharField(max_length=100, verbose_name='Alcance HDCVI')),
                ('alcance_hdtvi', models.CharField(max_length=100, verbose_name='Alcance HDTVI')),
                ('alcance_ahd', models.CharField(max_length=100, verbose_name='Alcance AHD')),
                ('filtro_ruido_interferência', models.CharField(max_length=100, verbose_name='Filtro de Ruído e Interferência')),
            ],
        ),
        migrations.CreateModel(
            name='Rede',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interface', models.CharField(max_length=100, verbose_name='Interface')),
                ('ddns', models.CharField(max_length=100, verbose_name='DDNS')),
                ('rtmp', models.CharField(max_length=100, verbose_name='RTMP')),
                ('ftp', models.CharField(max_length=100, verbose_name='FTP')),
                ('sip', models.CharField(max_length=100, verbose_name='SIP')),
                ('snmp', models.CharField(max_length=100, verbose_name='SNMP')),
                ('throughput', models.CharField(max_length=100, verbose_name='Throughput')),
                ('conexoes', models.CharField(max_length=100, verbose_name='Conexões/Aberturas de canais')),
                ('intelbras_cloud', models.CharField(max_length=100, verbose_name='Intelbras Cloud')),
                ('comp_adaptador_wireless', models.CharField(max_length=100, verbose_name='Compatibilidade com Adaptador Wireless')),
                ('poe', models.CharField(max_length=100, verbose_name='PoE')),
            ],
        ),
    ]
